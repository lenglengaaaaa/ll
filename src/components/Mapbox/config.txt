// 英文标注转换为中文   
// mapboxgl.setRTLTextPlugin(
//     "https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js"
// );

// 比例尺
// var scale = new mapboxgl.ScaleControl({
//     maxWidth: 80,
//     unit: "imperial"
// });
// map.addControl(scale);
// scale.setUnit("metric");

// 全图
// map.addControl(new mapboxgl.FullscreenControl());

// // 定位
// map.addControl(
//     new mapboxgl.GeolocateControl({
//         positionOptions: {
//             enableHighAccuracy: true
//         },
//         trackUserLocation: true
//     })
// );



// map.addImage('pulsing-dot', this.pulsingDot(map), { pixelRatio: 3 });
// map.addLayer({
//     "id": "points",
//     "type": "symbol",
//     "source": {
//         "type": "geojson",
//         "data": {
//             "type": "FeatureCollection",
//             "features": [{
//                 "type": "Feature",
//                 "geometry": {
//                     "type": "Point",
//                     "coordinates": [113.991244,22.595988]
//                 }
//             }]
//         }
//     },
//     "layout": {
//         "icon-image": "pulsing-dot"
//     }
// });

pulsingDot(map){
                var size = 200;
                return{
                    width: size,
                    height: size,
                    data: new Uint8Array(size * size * 4),
                    
                    onAdd: function() {
                        var canvas = document.createElement('canvas');
                        canvas.width = this.width;
                        canvas.height = this.height;
                        this.context = canvas.getContext('2d');
                    },
                    
                    render: function() {
                        var duration = 1000;
                        var t = (performance.now() % duration) / duration;
                        
                        var radius = size / 2 * 0.3;
                        var outerRadius = size / 2 * 0.7 * t + radius;
                        var context = this.context;
                        
                        // draw outer circle
                        context.clearRect(0, 0, this.width, this.height);
                        context.beginPath();
                        context.arc(this.width / 2, this.height / 2, outerRadius, 0, Math.PI * 2);
                        context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';
                        context.fill();
                        
                        // draw inner circle
                        context.beginPath();
                        context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);
                        context.fillStyle = 'rgba(255, 100, 100, 1)';
                        context.strokeStyle = 'white';
                        context.lineWidth = 2 + 4 * (1 - t);
                        context.fill();
                        context.stroke();
                        
                        // update this image's data with data from the canvas
                        this.data = context.getImageData(0, 0, this.width, this.height).data;
                        
                        // keep the map repainting
                        map.triggerRepaint();
                        
                        // return `true` to let the map know that the image was updated
                        return true;
                    }
                }
            }